---
layout: post
title:  "PING包数据解析"
date:   2025-08-17 00:00:00
categories: NULL
tags: NULL
excerpt: NULL
mathjax: true
---
* content
{:toc}
---

![KYHHbj.png](https://s2.ax1x.com/2019/10/23/KYHHbj.png)



> [博客地址](https://dufaxing.com){:target="_blank"}


## 前言


PING（Packet Internet Groper）是基于 **ICMP（Internet Control Message Protocol，互联网控制报文协议）** 的网络诊断工具，用于测试主机之间的连通性、测量往返时间（RTT）及检测丢包。

在不借助抓包工具等情况下，也可通过空口协议栈中数据链路层数据码流分析RRT时延。


---

## 数据分析

在ICMP协议中，标识符（Identifier）和序列号（Sequence Number）是匹配PING请求（Echo Request）与回复（Echo Reply）的关键字段。


### **1\. ICMP Echo请求/回复报文结构**

ICMP头部（Echo类型）的格式如下（以IPv4为例）：



```
0                   1                   2                   3
0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Code      |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Identifier          |        Sequence Number        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Data... (可变长度，PING默认包含时间戳或填充字符)          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
```

-   **Type**：
    
    -   `8` = Echo Request（请求）
        
    -   `0` = Echo Reply（回复）
        
-   **Code**：始终为`0`。
    
-   **Checksum**：ICMP报文的校验和。
    
-   **Identifier（标识符）**：2字节，用于标识会话（通常为进程ID或自定义值）。
    
-   **Sequence Number（序列号）**：2字节，用于标识同一会话中的不同报文。



---

### **2\. 标识符和序列号的作用**

#### **(1) Identifier（标识符）**

-   **功能**：区分不同主机或进程的PING会话。
    
    -   在Linux/Windows中，PING命令默认将标识符设置为**进程ID**（例如`ping`进程的PID）。
        
    -   同一主机的多个PING进程会使用不同标识符，避免回复混淆。
        
-   **示例**：
    
    -   进程A的PING标识符=`0x1234`，进程B的PING标识符=`0x5678`。
        
    -   回复报文必须携带与请求相同的标识符。
        

#### **(2) Sequence Number（序列号）**

-   **功能**：标识同一会话中的报文顺序，用于检测丢包或乱序。
    
    -   每发送一个Echo Request，序列号递增（通常从`0`开始）。
        
    -   回复报文必须携带与请求相同的序列号。
        
-   **示例**：
    
    -   第一次PING：序列号=`0x0001`
        
    -   第二次PING：序列号=`0x0002`



---

### **3\. 匹配请求与回复的流程**

以抓包数据为例（16进制显示ICMP头部）：

**请求帧（Echo Request）**

```
Type=08, Code=00, Checksum=ABCD  
Identifier=00 01  (0x0001)  
Sequence=00 01    (0x0001)  
Data=...
```

**回复帧（Echo Reply）**

```
Type=00, Code=00, Checksum=1234  
Identifier=00 01  (0x0001)  ← 必须与请求一致  
Sequence=00 01    (0x0001)  ← 必须与请求一致  
Data=...                    ← 数据内容通常原样返回
```

**匹配规则**：

1.  回复的`Identifier`和`Sequence`必须与某个请求完全一致。
    
2.  通过这两个字段，可以唯一确定一个请求的回复，即使网络中同时存在多个PING会话。



--- 


### **4\. 总结**

-   **标识符**：区分不同PING会话（如多进程场景）。
    
-   **序列号**：标识同一会话中的报文顺序。
    
-   **匹配关键**：通过`Identifier + Sequence`唯一关联请求与回复，确保RTT计算的准确性。
    

**RRT = 相同标识符与序列号下，回复报文接受时间-请求报文发送时间**


